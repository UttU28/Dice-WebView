trigger:
- main
# - none

variables:
  azureSubscription: 'dicePipeline'
  resourceGroupName: 'thistempresgrp'
  acrName: 'thisacr'
  webAppName: 'dicesaralapply'
  appServicePlanName: 'thisappserviceplan'
  imageRepository: 'imagename'
  imageTag: 'latest'
  codeDirectory: 'src'
  artifactName: '$(imageRepository)_ARTIFACT'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  containerRegistry: 'dockerSC'
  codeScanResults: 'code-scan-results.json'
  trivyResultsPath: 'trivy-results.json'
  checkovResultsPath: 'checkov-results.json'

jobs:
- job: Build
  displayName: 'Build Container Image'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: Docker@2
    displayName: Build and push an image to container registry
    inputs:
      containerRegistry: '$(containerRegistry)'
      repository: '$(imageRepository)'
      command: 'build' 
      Dockerfile: '$(dockerfilePath)'
      tags: '$(imageTag)'
  - task: Bash@3
    displayName: Save Docker Image
    inputs:
      targetType: 'inline'
      script: |
        docker save $(acrName).azurecr.io/$(imageRepository):$(imageTag) -o $(Pipeline.Workspace)/$(imageRepository).tar
  - task: PublishPipelineArtifact@1
    displayName: Publish the Artifact
    inputs:
      targetPath: '$(Pipeline.Workspace)/$(imageRepository).tar'
      artifact: '$(artifactName)'
      publishLocation: 'pipeline'
  
# - job: CreateAppServicePlan
#   dependsOn: Build
#   # dependsOn: [CodeScan, CheckovScan, ContainerScan]
#   displayName: 'Create Azure App Service Plan'
#   pool:
#     vmImage: 'ubuntu-latest'
#   steps:

#   - task: AzureCLI@2
#     inputs:
#       azureSubscription: '$(azureSubscription)'
#       scriptType: 'bash'
#       scriptLocation: 'inlineScript'
#       inlineScript: 'az appservice plan create --name $(appServicePlanName) --resource-group $(resourceGroupName) --sku B1 --is-linux'
#     displayName: 'Create App Service Plan'

- job: DeployToACR
  displayName: 'Deploy to Azure Container Registry'
  dependsOn: Build
  # dependsOn: CreateAppServicePlan
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifact: '$(artifactName)'
        targetPath: '$(Pipeline.Workspace)'
    - task: Bash@3
      displayName: Load Docker Image
      inputs:
        targetType: 'inline'
        script: |      
          docker load --input $(Pipeline.Workspace)/$(imageRepository).tar
          docker tag $(acrName).azurecr.io/$(imageRepository):$(imageTag) $(acrName).azurecr.io/$(imageRepository):$(imageTag)
    - task: Docker@2
      displayName: Push an image to container registry
      inputs:
        containerRegistry: '$(containerRegistry)'
        repository: '$(imageRepository)'
        command: 'push'
        tags: '$(tag)'


- job: DeployToWebApp
  displayName: 'Deploy to Azure Web App'
  dependsOn: DeployToACR
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: '$(azureSubscription)'
      appType: 'webAppContainer'
      WebAppName: '$(webAppName)'
      DockerNamespace: 'thisacr'
      DockerRepository: 'dicecontainer'
      DockerImageTag: '$(imageTag)'